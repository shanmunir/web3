"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const client_1 = require("./client");
const fs = __importStar(require("fs"));
const messages = JSON.parse(fs.readFileSync('../../test/message_objects.json', 'utf8'));
let siweMsg;
let re;
describe(`Message Generation`, () => {
    test.concurrent.each(Object.entries(messages))('%s', (n, test) => {
        try {
            siweMsg = new client_1.SiweMessage(test.msg);
            expect(siweMsg).toBeDefined();
        }
        catch (tryError) {
            re = new RegExp(`(.|\n)*${test.error}`);
            console.error(test.error);
            expect(n.startsWith('invalid')).toBe(true);
        }
    });
});
