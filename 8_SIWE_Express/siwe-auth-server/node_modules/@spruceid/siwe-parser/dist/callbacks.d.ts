export declare const cb: {
    signInWithEtherium: (result: any, chars: any, phraseIndex: any, data: any) => void;
    lineno: (result: any, chars: any, phraseIndex: any, data: any) => void;
    exTitle: (result: any, chars: any, phraseIndex: any, data: any) => void;
    nbTitle: (result: any, chars: any, phraseIndex: any, data: any) => void;
    riTitle: (result: any, chars: any, phraseIndex: any, data: any) => void;
    reTitle: (result: any, chars: any, phraseIndex: any, data: any) => void;
    oscheme: (result: any, chars: any, phraseIndex: any, data: any) => void;
    domain: (result: any, chars: any, phraseIndex: any, data: any) => void;
    address: (result: any, chars: any, phraseIndex: any, data: any) => void;
    statement: (result: any, chars: any, phraseIndex: any, data: any) => void;
    emptyStatement: (result: any, chars: any, phraseIndex: any, data: any) => void;
    version: (result: any, chars: any, phraseIndex: any, data: any) => void;
    nonce: (result: any, chars: any, phraseIndex: any, data: any) => void;
    issuedAt: (result: any, chars: any, phraseIndex: any, data: any) => void;
    expirationTime: (result: any, chars: any, phraseIndex: any, data: any) => void;
    notBefore: (result: any, chars: any, phraseIndex: any, data: any) => void;
    requestId: (result: any, chars: any, phraseIndex: any, data: any) => void;
    chainId: (result: any, chars: any, phraseIndex: any, data: any) => void;
    uriR: (result: any, chars: any, phraseIndex: any, data: any) => void;
    resource: (result: any, chars: any, phraseIndex: any, data: any) => void;
    scheme: (result: any, chars: any, phraseIndex: any, data: any) => void;
    userinfo: (result: any, chars: any, phraseIndex: any, data: any) => void;
    host: (result: any, chars: any, phraseIndex: any, data: any) => void;
    ipLiteral: (result: any, chars: any, phraseIndex: any, data: any) => void;
    port: (result: any, chars: any, phraseIndex: any, data: any) => void;
    pathAbempty: (result: any, chars: any, phraseIndex: any, data: any) => void;
    pathAbsolute: (result: any, chars: any, phraseIndex: any, data: any) => void;
    pathRootless: (result: any, chars: any, phraseIndex: any, data: any) => void;
    pathEmpty: (result: any, chars: any, phraseIndex: any, data: any) => void;
    query: (result: any, chars: any, phraseIndex: any, data: any) => void;
    fragment: (result: any, chars: any, phraseIndex: any, data: any) => void;
    uri: (result: any, chars: any, phraseIndex: any, data: any) => void;
    ipv4: (result: any, chars: any, phraseIndex: any, data: any) => void;
    h16: (result: any, chars: any, phraseIndex: any, data: any) => void;
    nodcolon: (result: any, chars: any, phraseIndex: any, data: any) => void;
    dcolon: (result: any, chars: any, phraseIndex: any, data: any) => void;
    decOctet: (result: any, chars: any, phraseIndex: any, data: any) => void;
    decDigit: (result: any, chars: any, phraseIndex: any, data: any) => void;
};
